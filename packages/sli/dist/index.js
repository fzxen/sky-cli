"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var t=require("commander"),n=e(require("log-symbols")),i=e(require("chalk")),s=e(require("ora")),o=e(require("inquirer")),r=e(require("download-git-repo")),c=require("fs"),a=require("path"),l=require("child_process"),u=e=>null==e;const d={vue:{url:"direct:https://gitee.com/zxffan/templates.git#vue-spa"},react:{url:""},electron:{url:""}};
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
function p(e,t,n,i){return new(n||(n=Promise))((function(s,o){function r(e){try{a(i.next(e))}catch(e){o(e)}}function c(e){try{a(i.throw(e))}catch(e){o(e)}}function a(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,c)}a((i=i.apply(e,t||[])).next())}))}var m;!function(e){e["babel-eslint"]="^10.1.0",e.eslint="^6.8.0",e["eslint-config-prettier"]="^6.11.0",e["eslint-plugin-prettier"]="^3.1.3",e["eslint-plugin-vue"]="^6.2.2",e.husky="^4.2.5",e["lint-staged"]="^9.5.0",e["postcss-import"]="^12.0.1",e["postcss-loader"]="^3.0.0",e["postcss-preset-env"]="^6.7.0",e.prettier="^1.19.1",e["raw-loader"]="^4.0.1",e.standard="^14.3.3",e["@commitlint/cli"]="^8.3.5",e["@commitlint/config-conventional"]="^8.3.4",e["@poloris/sli-vue"]="0.2.1"}(m||(m={}));var g=m;const v=(e,t)=>{const{name:n,eslint:i}=e;return i&&(t.scripts.lint="eslint --ext .js,.vue src",t.scripts.fix="eslint --fix --ext .js,.vue src",t.devDependencies.eslint=g.eslint,t.devDependencies["eslint-config-prettier"]=g["eslint-config-prettier"],t.devDependencies["eslint-plugin-prettier"]=g["eslint-plugin-prettier"],t.devDependencies["eslint-plugin-vue"]=g["eslint-plugin-vue"],t.devDependencies.prettier=g.prettier,t.devDependencies.standard=g.standard,t.devDependencies["babel-eslint"]=g["babel-eslint"],c.copyFile(a.resolve(__dirname,"../sources/vue/.eslintrc.js"),n+"/.eslintrc.js",e=>{if(e)throw new Error(".eslintrc.js failed to create")}),c.copyFile(a.resolve(__dirname,"../sources/vue/.eslintignore"),n+"/.eslintignore",e=>{if(e)throw new Error(".elsintignore failed to create")})),t.devDependencies["@poloris/sli-vue"]=g["@poloris/sli-vue"],t},f=(e,t)=>{var n;const{name:i,codeLint:s,commitLint:o,eslint:r}=e;var l;return(o||r&&s)&&(t.devDependencies.husky=g.husky),o&&(t.husky={hooks:{"commit-msg":"echo 'commit checking.... && commitlint -E HUSKY_GIT_PARAMS"}},t.devDependencies["@commitlint/cli"]=g["@commitlint/cli"],t.devDependencies["@commitlint/config-conventional"]=g["@commitlint/config-conventional"],l=i+"/.commitlintrc.js",c.copyFile(a.resolve(__dirname,"../sources/.commitlintrc.js"),l,e=>{if(e)throw new Error(".commitlintrc.js failed to create")})),r&&s&&((null===(n=null==t?void 0:t.husky)||void 0===n?void 0:n.hooks)?t.husky.hooks["pre-commit"]="echo 'code checking....' && lint-staged":t.husky={hooks:{"pre-commit":"echo 'code checking....' && lint-staged"}},t["lint-staged"]={"*.{js,vue}":["eslint --fix","git add"]},t.devDependencies["lint-staged"]=g["lint-staged"]),t},h=e=>((e,t)=>new Promise(n=>{if(c.existsSync(e)){const i=c.readFileSync(e).toString();let s=JSON.parse(i);const{name:o,description:r,author:a,frame:l}=t;Object.assign(s,{name:o,description:r,author:a}),s=f(t,s),"vue"===l&&(s=v(t,s)),c.writeFileSync(e,JSON.stringify(s,null,"\t")),n()}}))(e.name+"/package.json",e).then(()=>{return t=e.name+"/sli.config.js",p(void 0,void 0,void 0,(function*(){return c.copyFileSync(a.resolve(__dirname,"../sources/sli.config.js"),t)}));var t}).then(()=>{console.log(n.success,i.green("project has been updated"))});var y=e=>{(e=>new Promise((t,n)=>{u(e)&&n(new Error("name must be provided")),c.existsSync(e)?n(new Error(e+" has existed")):t()}))(e).then(()=>o.prompt((e=>[{type:"list",name:"frame",message:"please choose this project template",choices:["vue","react","electron"]},{type:"input",name:"name",message:"Please enter the project name: ",default:e,validate:e=>!!e||"you must provide the name"},{type:"input",name:"description",message:"Please enter the project description: ",validate:e=>!!e||"you must provide the description"},{type:"input",name:"author",message:"Please enter the author name: ",default:"fanzhongxu",validate:e=>!!e||"you must provide the author"},{type:"confirm",message:"Do you need eslint(standard&prettier)",name:"eslint",default:!0},{type:"confirm",message:"Do you need git hook to lint your commit message",name:"commitLint",default:!0},{type:"confirm",message:"Do you need git hook to lint your code(eslint muse be checked)",name:"codeLint",default:!0}])(e))).then(e=>{return t=e,new Promise((e,n)=>{const{name:i,frame:o}=t,c=s();c.start("downloading...");const a=d[o];a.url||(c.fail(o+" is not provided for now"),n(new Error)),r(a.url,i,{clone:!0},i=>{i?(c.fail("download failed, please check your network"),n(i)):(c.succeed("download successfully"),e(t))})});var t}).then(e=>h(e)).then(()=>{console.log(n.success,(e=>[i.green("app has been created successfully\n"),"\t cd "+e,"\t npm install or yarn","\t npm start"].join("\n"))(e))}).catch(e=>{e.message&&console.log(n.error,i.red(e.message))})};var w=()=>{o.prompt([{type:"confirm",message:"Do you need initialize a git repository",name:"git",default:!1}]).then(e=>{if(e instanceof Object&&"git"in e){const{git:t}=e;t&&function(){const e=s();e.start("git repository initializing..."),l.exec("git init",t=>{u(t)?e.succeed("git repository initialize successfully"):e.fail("git repository initialization failed")})}(),function(){const e=s();e.start("npm installing..."),l.exec("npm install",(t,s,o)=>{console.log(n.success,i.green(s)),console.log(n.error,i.red(o)),u(t)?e.succeed("npm install successfully"):e.fail("npm install failed")})}()}})};const j=new t.Command;j.command("create <name>").description("create a new project").alias("c").action(e=>{y(e)}),j.command("init").description("initialize project").alias("i").action(()=>{w()}),j.version(require("../package.json").version,"-v --version").parse(process.argv),process.argv.slice(2).length||j.outputHelp();
